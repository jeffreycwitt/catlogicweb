{"version":3,"sources":["../webpack/bootstrap","../node_modules/@babel/runtime/helpers/classCallCheck.js","../node_modules/@babel/runtime/helpers/createClass.js","../node_modules/catlogicjs/lib/Term.js","../node_modules/catlogicjs/lib/Proposition.js","../node_modules/catlogicjs/lib/Quantity.js","../node_modules/catlogicjs/lib/Quality.js","../node_modules/catlogicjs/lib/PropositionType.js","../node_modules/catlogicjs/lib/Truthvalue.js","../node_modules/catlogicjs/lib/Syllogism.js","../node_modules/catlogicjs/lib/PremisePair.js","../node_modules/catlogicjs/index.js","../node_modules/catlogicjs/lib/Distribution.js","../node_modules/catlogicjs/lib/Figure.js","../node_modules/catlogicjs/lib/Mood.js","test.worker.js","../node_modules/catlogicjs/lib/Form.js","../node_modules/catlogicjs/lib/PremiseCollection.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","instance","Constructor","TypeError","_defineProperties","target","props","length","descriptor","configurable","writable","protoProps","staticProps","Distribution","require","Term","termname","this","label","startsWith","split","proposition","subject","quantity","predicate","quality","distribution","Quantity","Quality","PropositionType","Truthvalue","Proposition","truthvalue","display_quantity","display_quality","opposite","isTrue","type","contrary","contradictory","subaltern","converse","obverse","contrapose","term","Form","Figure","Mood","Syllogism","major","minor","conclusion","figure","mt","middleTerm","mjmp","positionOfTerm","mnmp","mood","testName","validity","isDistributed","exclusivePremisesTest","affirmativeFromNegativeTest","negativeFromAffirmativesTest","isThreeTermTest","conclusionTermMatchTest","illicitProcessMajorTest","illicitProcessMinorTest","undistributedMiddleTest","report","filter","v","a","indexOf","majorTerm","minorTerm","termArray","PremisePair","possibleSyllogisms","possibleConclusions","map","PremiseCollection","majorType","minorType","conclusionType","self","addEventListener","e","set","data","console","log","postMessage","inferredTruthsUnique","initialPropositions","propositions","immediatePropositions","setInitialPropositions","immediateInferencePropositions","forEach","push","source","deductionType","immediateInferences","inf","i2","prop","pairs","p2","isSameAs","validSyllogisms","premisePairs","syllogism","newTruths","result","truths","inferredTruths","added","includes"],"mappings":"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","file":"85100dec6220e1cfc3f0.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/catlogicweb/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 14);\n","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","const Distribution = require('../lib/Distribution');\n\n\nclass Term {\n  constructor(termname){\n    //super(name)\n    this.label = termname\n  }\n  opposite(){\n    if (this.label.startsWith(\"NOT-\")){\n      return new Term(this.label.split(\"-\")[1])\n    }\n    else{\n      return new Term(\"NOT-\" + this.label)\n    }\n  }\n  distribution(proposition){\n    //check if term is in subject position\n    if (proposition.subject.label === this.label){\n      if (proposition.quantity.label === \"universal\"){\n        return new Distribution('distributed')\n      }\n      else if (proposition.quantity.label === \"particular\"){\n        return new Distribution('undistributed')\n      }\n    }\n    //check if term is in predicate position\n    else if (proposition.predicate.label === this.label){\n      if (proposition.quality.label === \"affirmative\"){\n        return new Distribution('undistributed')\n      }\n      else if (proposition.quality.label === \"negative\"){\n        return new Distribution('distributed')\n      }\n    }\n    else{\n      return new Distribution(\"unknown\")\n    }\n  }\n  isDistributed(proposition){\n    return this.distribution(proposition).label === \"distributed\" ? true : false\n  }\n}\n\n\n//export default Dog;\nmodule.exports = Term;\n","const Term = require('../lib/Term');\nconst Quantity = require('../lib/Quantity');\nconst Quality = require('../lib/Quality');\nconst PropositionType = require('../lib/PropositionType');\nconst Truthvalue = require('../lib/Truthvalue');\n\nclass Proposition {\n  // note: unknown truth values should be \"null\" rather than undefined.\n  // undefined will get changed to \"true\" through the default parameter setting\n  constructor(quantity, subject, quality, predicate, truthvalue=\"true\"){\n    //super(name)\n\n    this.quantity = typeof quantity === \"string\" ? new Quantity(quantity) : quantity\n    this.subject = typeof subject === \"string\" ? new Term(subject) : subject\n    this.quality = typeof quality === \"string\" ? new Quality(quality) : quality\n    this.predicate = typeof predicate === \"string\" ? new Term(predicate) : predicate\n    this.truthvalue = typeof truthvalue === \"string\" ? new Truthvalue(truthvalue) : truthvalue\n    this.label = this.label()\n  }\n  type(){\n    if (this.quantity.label === \"universal\" && this.quality.label === \"affirmative\" ){\n      return new PropositionType(\"A\")\n    }\n    else if (this.quantity.label == \"universal\" && this.quality.label === \"negative\"){\n      return new PropositionType(\"E\")\n    }\n    else if (this.quantity.label == \"particular\" && this.quality.label === \"affirmative\"){\n      return new PropositionType(\"I\")\n    }\n    else if (this.quantity.label == \"particular\" && this.quality.label === \"negative\"){\n      return new PropositionType(\"O\")\n    }\n  }\n  label(){\n    let display_quantity = \"\"\n    let display_quality = \"\"\n    if (this.quantity.label === \"universal\"){\n      if (this.quality.label === \"affirmative\"){\n        display_quantity = \"All\"\n        display_quality = \"are\"\n      }\n      else if (this.quality.label === \"negative\"){\n        display_quantity = \"No\"\n        display_quality = \"are\"\n      }\n    }\n    else if (this.quantity.label === \"particular\"){\n      if (this.quality.label == \"affirmative\"){\n        display_quantity = \"Some\"\n        display_quality = \"are\"\n      }\n      else if (this.quality.label == \"negative\"){\n        display_quantity = \"Some\"\n        display_quality = \"are not\"\n      }\n    }\n    return display_quantity + \" \" + this.subject.label + \" \" + display_quality + \" \" + this.predicate.label\n  }\n  contradictory(){\n    const quantity = this.quantity.opposite()\n    const quality = this.quality.opposite()\n    return new Proposition(quantity, this.subject, quality, this.predicate, this.truthvalue.opposite())\n  }\n  subaltern(){\n    const quantity = this.quantity.opposite()\n    let truthvalue = \"unknown\"\n    if (this.quantity.label === \"universal\"){\n      if (this.truthvalue.isTrue()){\n        truthvalue = this.truthvalue\n      }\n      // else it remains undefined\n    }\n    else if (this.quantity.label === \"particular\"){\n      if (!this.truthvalue.isTrue()){\n        truthvalue = this.truthvalue // ruby has !this.truthvalue. is this a bug in ruby version? or a bug here ?\n      }\n      // else it remains undefined\n    }\n    return new Proposition(quantity, this.subject, this.quality, this.predicate, truthvalue)\n  }\n  converse(){\n    const truthvalue = this.type().label === \"A\" || this.type().label === \"O\" ? \"unknown\" : this.truthvalue\n    return new Proposition(this.quantity, this.predicate, this.quality, this.subject, truthvalue)\n  }\n  obverse(){\n    const quality = this.quality.opposite()\n    return new Proposition(this.quantity, this.subject, quality, this.predicate.opposite(), this.truthvalue)\n  }\n  contrapose(){\n    const truthvalue = this.type().label === \"E\" || this.type().label === \"I\" ? \"unknown\" : this.truthvalue\n    return new Proposition(this.quantity, this.predicate.opposite(), this.quality, this.subject.opposite(), truthvalue)\n  }\n  contrary(){\n    //subcontrary\n    if (this.quantity.label === \"particular\"){\n      const quality = this.quality.opposite()\n      let truthvalue = \"unknown\"\n      if (!this.truthvalue.isTrue()){\n          truthvalue = this.truthvalue.opposite()\n      }\n      return new Proposition(this.quantity, this.subject, quality, this.predicate, truthvalue)\n    }\n    //contrary proper\n    else if (this.quantity.label === \"universal\"){\n      const quality = this.quality.opposite()\n      let truthvalue = \"unknown\"\n      if (this.truthvalue.isTrue()){\n          truthvalue = this.truthvalue.opposite()\n      }\n      const prop = new Proposition(this.quantity, this.subject, quality, this.predicate, truthvalue)\n      return prop\n    }\n  }\n  subcontrary(){\n    this.contrary()\n  }\n  immediateInferences(){\n    const contradictory = {\n      type: \"Contradictory\",\n      proposition: this.contradictory()\n    }\n    const subaltern = {\n      type: \"Subaltern\",\n      proposition: this.subaltern()\n    }\n    const contrary = {\n      type: \"(Sub)Contrary\",\n      proposition: this.contrary()\n    }\n    const converse = {\n      type: \"Converse\",\n      proposition: this.converse()\n    }\n    const obverse = {\n      type: \"Obverse\",\n      proposition: this.obverse()\n    }\n    const contrapose = {\n      type: \"Contrapose\",\n      proposition: this.contrapose()\n    }\n    return [contradictory, subaltern, contrary, converse, obverse, contrapose]\n  }\n  //Todo: needs test\n  positionOfTerm(term){\n    if (this.subject.label === term.label){\n      return \"subject\"\n    }\n    else if (this.predicate.label === term.label){\n      return \"predicate\"\n    }\n  }\n  isSameAs(proposition){\n    return proposition.label === this.label ? true : false\n  }\n}\nmodule.exports = Proposition;\n","class Quantity {\n  constructor(quantity){\n    //super(name)\n    this.label = quantity\n  }\n  opposite(){\n    if (this.label === \"universal\"){\n      return new Quantity(\"particular\")\n    }\n    else if (this.label === \"particular\"){\n      return new Quantity(\"universal\")\n    }\n  }\n}\n\n\n//export default Dog;\nmodule.exports = Quantity;\n","class Quality {\n  constructor(quality){\n    //super(name)\n    this.label = quality\n  }\n  opposite(){\n    if (this.label === \"affirmative\"){\n      return new Quality(\"negative\")\n    }\n    else if (this.label === \"negative\"){\n      return new Quality(\"affirmative\")\n    }\n  }\n\n}\n\n\n//export default Dog;\nmodule.exports = Quality;\n","const Term = require('../lib/Term');\nconst Quantity = require('../lib/Quantity');\nconst Quality = require('../lib/Quality');\nconst Proposition = require('../lib/Proposition');\nconst Truthvalue = require('../lib/Truthvalue');\n\nclass PropositionType {\n  constructor(type, truthvalue=\"true\"){\n    this.type = type\n    this.label = type\n    this.truthvalue = typeof truthvalue === \"string\" ? new Truthvalue(truthvalue) : truthvalue\n  }\n  quantity(){\n    if (this.label === \"A\"){\n      return new Quantity(\"universal\")\n    }\n    else if (this.label === \"E\"){\n      return new Quantity(\"universal\")\n    }\n    else if (this.label === \"I\"){\n      return new Quantity(\"particular\")\n    }\n    else if (this.label === \"O\"){\n      return new Quantity(\"particular\")\n    }\n  }\n  quality(){\n    if (this.label === \"A\"){\n      return new Quality(\"affirmative\")\n    }\n    else if (this.label === \"E\"){\n      return new Quality(\"negative\")\n    }\n    else if (this.label === \"I\"){\n      return new Quality(\"affirmative\")\n    }\n    else if (this.label === \"O\"){\n      return new Quality(\"negative\")\n    }\n  }\n  proposition(){\n    return new Proposition(this.quantity(), new Term(\"S\"), this.quality(), new Term(\"P\"), this.truthvalue)\n  }\n}\n\n\n//export default Dog;\nmodule.exports = PropositionType;\n","class Truthvalue {\n  constructor(truthvalue){\n    this.label = truthvalue\n  }\n  isTrue(){\n    if (this.label === \"true\"){\n      return true\n    }\n    else{\n      return false\n    }\n  }\n  opposite(){\n    if (this.label === \"true\"){\n      return new Truthvalue(\"false\")\n    }\n    else if (this.label === \"false\"){\n      return new Truthvalue(\"true\")\n    }\n    else {\n      return new Truthvalue(this.label)\n    }\n  }\n}\n\n\n//export default Dog;\nmodule.exports = Truthvalue;\n","const Term = require('../lib/Term');\nconst PremisePair = require('../lib/PremisePair');\nconst Form = require('../lib/Form');\nconst Figure = require('../lib/Figure');\nconst Mood = require('../lib/Mood');\n\nclass Syllogism {\n  constructor(major, minor, conclusion){\n    //super(name)\n    this.major = major.truthvalue.label === \"false\" ? major.contradictory() : major\n    this.minor = minor.truthvalue.label === \"false\" ? minor.contradictory() : minor\n    this.conclusion = conclusion.truthvalue.label === \"false\" ? conclusion.contradictory : conclusion\n    this.label = this.label()\n  }\n  label(){\n    return this.major.label +\"\\n\" + this.minor.label + \"\\n\" + this.conclusion.label\n  }\n  mood(){\n    return new Mood(this.major.type(), this.minor.type(), this.conclusion.type())\n  }\n  figure(){\n    let figure = new Figure(\"unknown\")\n    const mt = this.middleTerm()\n    if (mt){\n      const mjmp = this.major.positionOfTerm(mt)\n      const mnmp = this.minor.positionOfTerm(mt)\n      \n      if (mjmp == 'subject' && mnmp == 'predicate'){\n        figure = new Figure(\"1\")\n      }\n      else if (mjmp == 'predicate' && mnmp == 'predicate'){\n        figure = new Figure(\"2\")\n      }\n      else if (mjmp == \t'subject' && mnmp == 'subject'){\n        figure = new Figure(\"3\")\n      }\n      else if (mjmp == 'predicate' && mnmp == 'subject'){\n        figure = new Figure(\"4\")\n      }\n    }\n    return figure\n  }\n  form(){\n    return new Form(this.mood(), this.figure())\n  }\n\n  exclusivePremisesTest(){\n    const validity = this.major.quality.label === \"negative\" && this.minor.quality.label === \"negative\" ? false : true\n    const report = {\n      testName: \"Exclusive Premises\",\n      validity: validity\n    }\n    return report\n  }\n  affirmativeFromNegativeTest(){\n    const validity = (this.major.quality.label === \"negative\" || this.minor.quality.label === \"negative\") && this.conclusion.quality.label === \"affirmative\" ? false : true\n    const report = {\n      testName: \"Affirmative Conclusion from a Negative Premise\",\n      validity: validity\n    }\n    return report\n  }\n  negativeFromAffirmativesTest(){\n    const validity = (this.major.quality.label === \"affirmative\" && this.minor.quality.label === \"affirmative\") && this.conclusion.quality.label === \"negative\" ? false : true\n    const report = {\n      testName: \"Negative Conclusion from a Affirmative Premises\",\n      validity: validity\n    }\n    return report\n  }\n  undistributedMiddleTest(){\n    if (this.middleTerm()){\n      const validity = !this.middleTerm().isDistributed(this.major) && !this.middleTerm().isDistributed(this.minor) ? false : true\n      const report = {\n        testName: \"Undistributed Middle\",\n        validity: validity\n      }\n      return report\n    }\n    else{\n      const report = {\n        testName: \"Undistributed Middle\",\n        validity: false\n      }\n      return report\n    }\n  }\n  illicitProcessMajorTest(){\n    let validity = true\n    if (this.conclusion.predicate.isDistributed(this.conclusion)) {\n      if (!this.conclusion.predicate.isDistributed(this.major)){\n        validity = false\n      }\n    }\n    const report = {\n      testName: \"Illicit Process Major\",\n      validity: validity\n    }\n    return report\n  }\n  illicitProcessMinorTest(){\n    let validity = true\n    if (this.conclusion.subject.isDistributed(this.conclusion)) {\n      if (!this.conclusion.subject.isDistributed(this.minor)){\n        validity = false\n      }\n    }\n    const report = {\n      testName: \"Illicit Process Minor\",\n      validity: validity\n    }\n    return report\n  }\n  validity(){\n    if (this.exclusivePremisesTest().validity === false ||\n        this.affirmativeFromNegativeTest().validity === false ||\n        this.negativeFromAffirmativesTest().validity === false ||\n        this.isThreeTermTest().validity === false ||\n        this.conclusionTermMatchTest().validity === false ||\n        this.illicitProcessMajorTest().validity === false ||\n        this.illicitProcessMinorTest().validity === false ||\n        this.undistributedMiddleTest().validity === false\n      ){\n          //needs other three tests\n      return false\n    }\n    else{\n      return true\n    }\n  }\n  report(){\n    const report = [\n      this.exclusivePremisesTest(),\n      this.affirmativeFromNegativeTest(),\n      this.negativeFromAffirmativesTest(),\n      this.illicitProcessMajorTest(),\n      this.illicitProcessMinorTest(),\n      this.undistributedMiddleTest(),\n      this.isThreeTermTest(),\n      this.conclusionTermMatchTest(),\n      //need other three tests\n    ]\n    return report\n  }\n  isThreeTermTest(){\n\n    const termArray = [this.major.subject.label, this.major.predicate.label, this.minor.subject.label, this.minor.predicate.label]\n    const unique = termArray.filter((v, i, a) => a.indexOf(v) === i);\n    //const validity = unique.length === 3 ? true : false\n    let validity = false\n    if (unique.length === 3 && this.major.subject.label != this.major.predicate.label && this.minor.subject.label != this.major.predicate.label){\n      validity = true\n    }\n\n    const report = {\n      testName: \"Premises are composed of three terms\",\n      validity: validity\n    }\n    return report\n\n    //TODO a seems to be problem with calling PremisePair here; not sure why\n    // const premise = new PremisePair(this.major, this.minor)\n    // return premise.isThreeTermTest()\n\n  }\n  //TODO:NOT FINISHED\n  conclusionTermMatchTest(){\n    const middleTerm = this.middleTerm()\n    if (middleTerm){\n      const majorTerm = this.major.subject.label === middleTerm.label ? this.major.predicate : this.major.subject\n      const minorTerm = this.minor.subject.label === middleTerm.label ? this.minor.predicate : this.minor.subject\n      const validity = this.conclusion.subject.label === minorTerm.label && this.conclusion.predicate.label === majorTerm.label ? true : false\n      const report = {\n        testName: \"Conclusion Composed of Major and Minor Terms\",\n        validity: validity\n      }\n      return report\n    }\n    else{\n      const report = {\n        testName: \"Conclusion Composed of Major and Minor Terms\",\n        validity: false\n      }\n      return report\n    }\n  }\n  middleTerm(){\n    const termArray = [this.major.subject.label, this.major.predicate.label, this.minor.subject.label, this.minor.predicate.label]\n    if (this.isThreeTermTest().validity){\n      return new Term(termArray.filter((v, i, a) => a.indexOf(v) != i)[0]);\n    }\n    else {\n      return undefined\n    }\n    //return new PremisePair(this.major, this.minor).middleTerm()\n  }\n}\n\n\n//export default Dog;\nmodule.exports = Syllogism;\n","const Proposition = require('../lib/Proposition');\nconst Syllogism = require('../lib/Syllogism');\nconst Term = require('../lib/Term');\n\nclass PremisePair {\n  constructor(major, minor){\n    //super(name)\n    this.major = major\n    this.minor = minor\n  }\n  middleTerm(){\n    const termArray = [this.major.subject.label, this.major.predicate.label, this.minor.subject.label, this.minor.predicate.label]\n    if (this.isThreeTermTest().validity){\n      return new Term(termArray.filter((v, i, a) => a.indexOf(v) != i)[0]);\n    }\n    else {\n      return undefined\n    }\n  }\n  minorTerm(){\n    if (this.middleTerm()){\n      return this.minor.subject.label === this.middleTerm().label ? this.minor.predicate : this.minor.subject\n    }\n  }\n  majorTerm(){\n    if (this.middleTerm()){\n      return this.major.subject.label === this.middleTerm().label ? this.major.predicate : this.major.subject\n    }\n  }\n  isThreeTermTest(){\n    const termArray = [this.major.subject.label, this.major.predicate.label, this.minor.subject.label, this.minor.predicate.label]\n    const unique = termArray.filter((v, i, a) => a.indexOf(v) === i);\n    //const validity = unique.length === 3 ? true : false\n    let validity = false\n    if (unique.length === 3 && this.major.subject.label != this.major.predicate.label && this.minor.subject.label != this.major.predicate.label){\n      validity = true\n    }\n    const report = {\n      testName: \"Premises are composed of three terms\",\n      validity: validity\n    }\n    return report\n\n  }\n  //TODO not working in web app, because of order exported in index.js. Not sure what problem is.\n  //work around is to use possible conclusions and let client construct syllogism\n  possibleSyllogisms(){\n    const possibleConclusions = this.possibleConclusions()\n    const possibleSyllogisms = possibleConclusions.map((c, i) => {\n      const syllogism = new Syllogism(this.major, this.minor, c)\n      return syllogism\n    })\n    return possibleSyllogisms\n  }\n  possibleConclusions(){\n    const minorTerm = this.minorTerm() ? this.minorTerm() : \"unknown\"\n    const majorTerm = this.majorTerm() ? this.majorTerm() : \"unknown\"\n    const possibleConclusions = [\n      new Proposition(\"universal\", minorTerm, \"affirmative\", majorTerm),\n      new Proposition(\"universal\", minorTerm, \"negative\", majorTerm),\n      new Proposition(\"particular\", minorTerm, \"affirmative\", majorTerm),\n      new Proposition(\"particular\", minorTerm, \"negative\", majorTerm),\n    ]\n    return possibleConclusions\n  }\n}\n\n\nmodule.exports = PremisePair;\n","exports.Term = require('./lib/Term.js');\nexports.Distribution = require('./lib/Distribution.js');\nexports.Proposition = require('./lib/Proposition.js');\nexports.Quantity = require('./lib/Quantity.js');\nexports.Quality = require('./lib/Quality.js');\nexports.PropositionType = require('./lib/PropositionType.js');\nexports.Truthvalue = require('./lib/Truthvalue.js');\n//TODO order matters here, syllogis calls premise pair and premise pair calls syllogism\n// in this order Syllogism will lead to error when it calls Premise Pair\nexports.Syllogism = require('./lib/Syllogism.js');\n//but if flipped, then premise pair will case error when it calls Syllogism\nexports.PremisePair = require('./lib/PremisePair.js');\nexports.PremiseCollection = require('./lib/PremiseCollection.js');\n","class Distribution {\n  constructor(distribution){\n    //super(name)\n    this.label = distribution\n  }\n  opposite(){\n    if (this.label === \"distributed\"){\n      return new Distribution(\"undistributed\")\n    }\n    else if (this.label === \"undistributed\"){\n      return new Distribution(\"distributed\")\n    }\n  }\n}\n\n\n//export default Dog;\nmodule.exports = Distribution;\n","class Figure {\n  /**\n   * @constructor\n   * @param {string} figure - the number of the figure, 1, 2, 3, or 4\n   * @returns {Figure}\n   */\n  constructor(figure){\n    /**\n     * @type string\n     */\n    this.label = figure\n  }\n  \n}\n\nmodule.exports = Figure;\n","const PropositionType = require('../lib/PropositionType');\n\nclass Mood {\n  constructor(majorType, minorType, conclusionType){\n    this.majorType = typeof majorType === \"string\" ? new PropositionType(majorType) : majorType\n    this.minorType = typeof minorType === \"string\" ? new PropositionType(minorType) : minorType\n    this.conclusionType = typeof conclusionType === \"string\" ? new PropositionType(conclusionType) : conclusionType\n    /**\n     * @type string\n     */\n    this.label = this.label()\n  }\n  label(){\n   return this.majorType.label + this.minorType.label + this.conclusionType.label\n  }\n}\n\nmodule.exports = Mood;\n","import C from 'catlogicjs'\n\n// See https://github.com/timarney/react-app-rewired/issues/426#issuecomment-576423171\n//for why eslin-disable-next-line is necessary\n// eslint-disable-next-line\nself.addEventListener(\"message\", inferTruths);\n\nfunction inferTruths(e) {\n  const set = e.data.map((p) => {\n    return new C.Proposition(p.quantity.label, p.subject.label, p.quality.label, p.predicate.label, p.truthvalue.label)\n  })\n  console.log('[WORKER] MSG FROM MAIN THREAD:', set)\n  postMessage(new C.PremiseCollection(set).inferredTruthsUnique());\n}","const Figure = require('../lib/Figure');\nconst Mood = require('../lib/Mood');\n\nclass Form {\n  /**\n   * @constructor\n   * @param {Figure} figure - figure object\n   * @param {Mood} mood - mood object\n   * @returns {Form}\n   */\n  constructor(mood, figure){\n    this.figure = typeof Figure ? figure : new Figure(figure) \n    this.mood = typeof Mood ? mood : new Mood(mood)\n    this.label = this.mood.label + this.figure.label\n  }\n  \n}\n\nmodule.exports = Form;\n","const PremisePair = require('../lib/PremisePair');\nconst Syllogism = require('../lib/Syllogism');\n\nclass PremiseCollection {\n  constructor(initialPropositions){\n    this.initialPropositions = initialPropositions\n    this.propositions = []\n    this.immediatePropositions = []\n    this.setInitialPropositions()\n    this.immediateInferencePropositions()\n  }\n  setInitialPropositions(){\n    this.initialPropositions.forEach((p, i) => {\n      if (p.truthvalue !== \"unknown\"){\n        this.propositions.push({\n          source: \"assumed\",\n          deductionType: \"assumed\",\n          type: \"initial\",\n          proposition: p\n        })\n      }\n    })\n  }\n  immediateInferencePropositions(){\n    this.initialPropositions.forEach((p, i)=>{\n      p.immediateInferences().forEach((inf, i2)=>{\n        if (inf.truthvalue !== \"unknown\"){\n          const prop = {\n            source: p,\n            deductionType: \"immediateInference\",\n            type: inf.type,\n            proposition: inf.proposition\n          }\n          this.propositions.push(prop)\n          this.immediatePropositions.push(prop)\n        }\n      })\n    })\n  }\n  premisePairs(){\n    const pairs = []\n    this.propositions.forEach((p, i) => {\n      this.propositions.forEach((p2, i2) => {\n        if (!p.proposition.isSameAs(p2.proposition)){\n          pairs.push(new PremisePair(p.proposition, p2.proposition))\n        }\n      })\n    })\n    return pairs\n  }\n  validSyllogisms(){\n    const validSyllogisms = []\n    const pairs = this.premisePairs()\n    pairs.forEach((p, i) => {\n      const conclusions = p.possibleConclusions()\n      conclusions.forEach((c, i) => {\n        const syllogism = new Syllogism(p.major, p.minor, c)\n        if (syllogism.validity()){\n          validSyllogisms.push(syllogism)\n        }\n        else{\n          null\n        }\n      })\n    })\n    return validSyllogisms\n  }\n  inferredTruths(){\n    const newTruths = []\n    //const newTruths = [...this.immediatePropositions]\n    this.immediatePropositions.forEach((inf) => {\n      if (inf.proposition.truthvalue.isTrue()){\n        return newTruths.push(inf)\n      }\n    })\n    const validSyllogisms = this.validSyllogisms()\n    validSyllogisms.forEach((s, i) => {\n      const result = {\n        source: s,\n        deductionType: \"syllogism\",\n        type: \"syllogism Figure Goes here\",\n        proposition: s.conclusion\n      }\n      newTruths.push(result)\n    })\n    return newTruths\n  }\n  inferredTruthsUnique(){\n    const newTruths = []\n    const truths = this.inferredTruths()\n    const added = []\n    const unique = truths.forEach((p, i) => {\n      if (!added.includes(p.proposition.label)){\n        newTruths.push(p)\n      }\n      added.push(p.proposition.label)\n    })\n    return newTruths\n  }\n}\nmodule.exports = PremiseCollection\n"],"sourceRoot":""}